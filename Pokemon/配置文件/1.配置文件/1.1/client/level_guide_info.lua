local record_level_guide_info = {}

record_level_guide_info.id = 0 --id
record_level_guide_info.level = 0 --升级等级
record_level_guide_info.type_1 = 0 --提示类型1
record_level_guide_info.type_2 = 0 --提示类型2
record_level_guide_info.type_3 = 0 --提示类型3


level_guide_info = {
    _data = {
    [1] = {1,1,0,0,0,},
    [2] = {2,2,10,11,21,},
    [3] = {3,3,11,5,21,},
    [4] = {4,4,12,5,21,},
    [5] = {5,5,12,5,21,},
    [6] = {6,6,12,5,6,},
    [7] = {7,7,12,2,6,},
    [8] = {8,8,12,2,6,},
    [9] = {9,9,12,2,19,},
    [10] = {10,10,13,2,19,},
    [11] = {11,11,13,2,19,},
    [12] = {12,12,13,3,19,},
    [13] = {13,13,13,3,9,},
    [14] = {14,14,13,3,9,},
    [15] = {15,15,13,3,9,},
    [16] = {16,16,13,3,9,},
    [17] = {17,17,14,3,9,},
    [18] = {18,18,14,4,9,},
    [19] = {19,19,14,4,34,},
    [20] = {20,20,14,4,34,},
    [21] = {21,21,14,4,29,},
    [22] = {22,22,14,4,29,},
    [23] = {23,23,14,4,29,},
    [24] = {24,24,14,29,1,},
    [25] = {25,25,14,29,1,},
    [26] = {26,26,17,29,1,},
    [27] = {27,27,17,1,35,},
    [28] = {28,28,17,1,35,},
    [29] = {29,29,23,1,35,},
    [30] = {30,30,23,1,35,},
    [31] = {31,31,18,20,35,},
    [32] = {32,32,18,20,35,},
    [33] = {33,33,18,20,16,},
    [34] = {34,34,18,20,16,},
    [35] = {35,35,18,20,16,},
    [36] = {36,36,39,37,38,},
    [37] = {37,37,39,37,38,},
    [38] = {38,38,37,38,39,},
    [39] = {39,39,37,38,40,},
    [40] = {40,40,37,38,40,},
    [41] = {41,41,38,40,44,},
    [42] = {42,42,38,40,44,},
    [43] = {43,43,38,40,44,},
    [44] = {44,44,38,40,44,},
    [45] = {45,45,38,40,44,},
    [46] = {46,46,45,40,44,},
    [47] = {47,47,45,40,44,},
    [48] = {48,48,45,40,44,},
    [49] = {49,49,45,40,44,},
    [50] = {50,50,40,44,45,},
    [51] = {51,51,45,40,44,},
    [52] = {52,52,45,40,44,},
    [53] = {53,53,97,40,44,},
    [54] = {54,54,97,40,44,},
    [55] = {55,55,97,40,44,},
    [56] = {56,56,46,64,59,},
    [57] = {57,57,46,64,59,},
    [58] = {58,58,46,64,59,},
    [59] = {59,59,46,64,59,},
    [60] = {60,60,46,64,59,},
    [61] = {61,61,56,57,90,},
    [62] = {62,62,56,57,90,},
    [63] = {63,63,56,57,90,},
    [64] = {64,64,56,57,90,},
    [65] = {65,65,56,57,90,},
    [66] = {66,66,56,69,61,},
    [67] = {67,67,56,69,61,},
    [68] = {68,68,56,69,61,},
    [69] = {69,69,56,69,61,},
    [70] = {70,70,56,69,61,},
    [71] = {71,71,56,69,61,},
    [72] = {72,72,56,69,61,},
    [73] = {73,73,56,69,61,},
    [74] = {74,74,56,69,61,},
    [75] = {75,75,56,69,61,},
    [76] = {76,76,77,69,60,},
    [77] = {77,77,77,69,60,},
    [78] = {78,78,77,69,60,},
    [79] = {79,79,77,69,60,},
    [80] = {80,80,77,69,60,},
    [81] = {81,81,77,69,60,},
    [82] = {82,82,77,69,60,},
    [83] = {83,83,77,69,60,},
    [84] = {84,84,77,69,60,},
    [85] = {85,85,77,69,60,},
    [86] = {86,86,77,69,89,},
    [87] = {87,87,77,69,89,},
    [88] = {88,88,77,69,89,},
    [89] = {89,89,77,69,89,},
    [90] = {90,90,77,69,89,},
    [91] = {91,91,77,69,74,},
    [92] = {92,92,77,69,74,},
    [93] = {93,93,77,69,74,},
    [94] = {94,94,77,69,74,},
    [95] = {95,95,77,69,74,},
    [96] = {96,96,77,69,74,},
    [97] = {97,97,77,69,74,},
    [98] = {98,98,77,69,74,},
    [99] = {99,99,77,69,74,},
    [100] = {100,100,77,69,74,},
    [101] = {101,101,77,69,74,},
    [102] = {102,102,77,69,74,},
    [103] = {103,103,77,69,74,},
    [104] = {104,104,77,69,74,},
    [105] = {105,105,77,69,74,},
    [106] = {106,106,77,69,74,},
    [107] = {107,107,77,69,74,},
    [108] = {108,108,77,69,74,},
    [109] = {109,109,77,69,74,},
    [110] = {110,110,77,69,74,},
    [111] = {111,111,77,69,74,},
    [112] = {112,112,77,69,74,},
    [113] = {113,113,77,69,74,},
    [114] = {114,114,77,69,74,},
    [115] = {115,115,77,69,74,},
    [116] = {116,116,77,69,74,},
    [117] = {117,117,77,69,74,},
    [118] = {118,118,77,69,74,},
    [119] = {119,119,77,69,74,},
    [120] = {120,120,77,69,74,},
    [121] = {121,121,77,69,74,},
    [122] = {122,122,77,69,74,},
    [123] = {123,123,77,69,74,},
    [124] = {124,124,77,69,74,},
    [125] = {125,125,77,69,74,},
    [126] = {126,126,77,69,74,},
    [127] = {127,127,77,69,74,},
    [128] = {128,128,77,69,74,},
    [129] = {129,129,77,69,74,},
    [130] = {130,130,77,69,74,},
    [131] = {131,131,77,69,74,},
    [132] = {132,132,77,69,74,},
    [133] = {133,133,77,69,74,},
    [134] = {134,134,77,69,74,},
    [135] = {135,135,77,69,74,},
    [136] = {136,136,77,69,74,},
    [137] = {137,137,77,69,74,},
    [138] = {138,138,77,69,74,},
    [139] = {139,139,77,69,74,},
    [140] = {140,140,77,69,74,},
    [141] = {141,141,77,69,74,},
    [142] = {142,142,77,69,74,},
    [143] = {143,143,77,69,74,},
    [144] = {144,144,77,69,74,},
    [145] = {145,145,77,69,74,},
    [146] = {146,146,77,69,74,},
    [147] = {147,147,77,69,74,},
    [148] = {148,148,77,69,74,},
    [149] = {149,149,77,69,74,},
    [150] = {150,150,77,69,74,},
    }
}

local __index_id = {
    [1] = 1,
    [2] = 2,
    [3] = 3,
    [4] = 4,
    [5] = 5,
    [6] = 6,
    [7] = 7,
    [8] = 8,
    [9] = 9,
    [10] = 10,
    [11] = 11,
    [12] = 12,
    [13] = 13,
    [14] = 14,
    [15] = 15,
    [16] = 16,
    [17] = 17,
    [18] = 18,
    [19] = 19,
    [20] = 20,
    [21] = 21,
    [22] = 22,
    [23] = 23,
    [24] = 24,
    [25] = 25,
    [26] = 26,
    [27] = 27,
    [28] = 28,
    [29] = 29,
    [30] = 30,
    [31] = 31,
    [32] = 32,
    [33] = 33,
    [34] = 34,
    [35] = 35,
    [36] = 36,
    [37] = 37,
    [38] = 38,
    [39] = 39,
    [40] = 40,
    [41] = 41,
    [42] = 42,
    [43] = 43,
    [44] = 44,
    [45] = 45,
    [46] = 46,
    [47] = 47,
    [48] = 48,
    [49] = 49,
    [50] = 50,
    [51] = 51,
    [52] = 52,
    [53] = 53,
    [54] = 54,
    [55] = 55,
    [56] = 56,
    [57] = 57,
    [58] = 58,
    [59] = 59,
    [60] = 60,
    [61] = 61,
    [62] = 62,
    [63] = 63,
    [64] = 64,
    [65] = 65,
    [66] = 66,
    [67] = 67,
    [68] = 68,
    [69] = 69,
    [70] = 70,
    [71] = 71,
    [72] = 72,
    [73] = 73,
    [74] = 74,
    [75] = 75,
    [76] = 76,
    [77] = 77,
    [78] = 78,
    [79] = 79,
    [80] = 80,
    [81] = 81,
    [82] = 82,
    [83] = 83,
    [84] = 84,
    [85] = 85,
    [86] = 86,
    [87] = 87,
    [88] = 88,
    [89] = 89,
    [90] = 90,
    [91] = 91,
    [92] = 92,
    [93] = 93,
    [94] = 94,
    [95] = 95,
    [96] = 96,
    [97] = 97,
    [98] = 98,
    [99] = 99,
    [100] = 100,
    [101] = 101,
    [102] = 102,
    [103] = 103,
    [104] = 104,
    [105] = 105,
    [106] = 106,
    [107] = 107,
    [108] = 108,
    [109] = 109,
    [110] = 110,
    [111] = 111,
    [112] = 112,
    [113] = 113,
    [114] = 114,
    [115] = 115,
    [116] = 116,
    [117] = 117,
    [118] = 118,
    [119] = 119,
    [120] = 120,
    [121] = 121,
    [122] = 122,
    [123] = 123,
    [124] = 124,
    [125] = 125,
    [126] = 126,
    [127] = 127,
    [128] = 128,
    [129] = 129,
    [130] = 130,
    [131] = 131,
    [132] = 132,
    [133] = 133,
    [134] = 134,
    [135] = 135,
    [136] = 136,
    [137] = 137,
    [138] = 138,
    [139] = 139,
    [140] = 140,
    [141] = 141,
    [142] = 142,
    [143] = 143,
    [144] = 144,
    [145] = 145,
    [146] = 146,
    [147] = 147,
    [148] = 148,
    [149] = 149,
    [150] = 150,
}

local __key_map = {
    id = 1,
    level = 2,
    type_1 = 3,
    type_2 = 4,
    type_3 = 5,
}

local m = {
    __index = function(t,k)
        if k == "toObject"then
            return function()
                local o = {}
                for key, v in pairs (__key_map) do
                    o[key] = t._raw[v]
                end
                return o
            end
        end

        assert(__key_map[k], "cannot find " .. k .. " in record_level_guide_info")
        return t._raw[__key_map[k]]
    end
}

function level_guide_info.getLength()
    return #level_guide_info._data
end

function level_guide_info.hasKey(k)
    if __key_map[k] == nil then
        return false
    else
        return true
    end
end

function level_guide_info.indexOf(index)
    if index == nil then
        return nil
    end
    return setmetatable({_raw = level_guide_info._data[index]}, m)
end

function level_guide_info.get(id)
    local k = id
    return level_guide_info.indexOf(__index_id[k])
end

function level_guide_info.set(id, key, value)
    local record = level_guide_info.get(id)
    if record then
        local keyIndex = __key_map[key]
        if keyIndex then
            record._raw[keyIndex] = value
        end
    end
end

function level_guide_info.get_index_data()
    return __index_id
end

